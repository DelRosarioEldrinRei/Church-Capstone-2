extends ../../../../templates/home
block main
	style.
		@media screen and (max-width: 576px) {
			.col-md-4, .col-md-6, .col-md-9, .col-md-3 {
				padding-left: 0;
				padding-right: 0;
			}
			.form-wizard-step {
					padding-bottom: 10px !important;
			}
		}
		#header-style-1 {
			background-image: url(/../img/wall.jpg)
		}
		.form-wizard-tolal-steps-3 .form-wizard-step {
			width: 49.33%;
		}
		#other > div:nth-child(2) > div > div > div > div.file-preview > div > div.file-drop-zone-title {
			font-size: 1rem;
		}
		.h4 {
			font-size: 20px;
			font-weight: 300;
			font-family: "Montserrat", sans-serif;
			color: #4c2508;
			line-height: 26px;
		}
	#headers
		#header-style-1
			.container
				.header-caption
					.row
						.col-md-12.header-content
							h3.header-title.animated.fadeInDown.invisible
								span.text-primary Helium - 
								| Bootstrap 4 UI Kit
							h5.header-text.animated.fadeIn.invisible
								| Lorem ipsum dolor sit amet, consectetuer adipiscing elit<br>Lorem ipsum dolor sit amet, consectetuer.</h5>
							//- a.page-scroll.btn.btn-lg.btn-default-filled.animated.fadeInUp.invisible(href="#") Download Now
							//- a.page-scroll.btn.btn-lg.btn-common.animated.fadeInUp.invisible(href="#") Explore
		#raised-section.main.main-raised
			section.form-box
				.container
					.row
						.col-md-12.form-wizard.shadow3
							form
								// Form Wizard
								//- form(role='form' action="/index/establishment/form"   enctype="multipart/form-data" method="post" data-toggle='validator')
								h3 Establishment Blessing Form
								p.mb-4 Fill all form fields
								.form-wizard-steps.form-wizard-tolal-steps-3
									.form-wizard-progress
											.form-wizard-progress-line(data-now-value='12.25' data-number-of-steps='3' style='width: 12.25%;')
									// Step 1
									.form-wizard-step.active
											.form-wizard-step-icon
													i.fa.fa-calendar(aria-hidden='true')
											p.d-none.d-sm-block Schedule Date
									// Step 1
									// Step 2
									.form-wizard-step
											.form-wizard-step-icon
													i.fa.fa-info(aria-hidden='true')
											p.d-none.d-sm-block Blessing Details
									// Step 2
								// Form Step 1
								fieldset
									h4
										.d-none.d-sm-inline Appointment
										span Step 1 - 2
									h5.label-control.text-lg-center.text-sm-left Desired Date
										.text-danger.d-inline  *
									.row
											.col-md-8.mx-lg-auto.mx-sm-left.my-lg-auto.my-sm-left.text-lg-center.text-sm-left
													h5
															#special
																	.form-group
																			.container
																					#calendarEstablishment
																	.help-block.with-errors
									.learn-more.pull-right
												button.btn.btn-next(type='button') Next
									
								// Form Step 1
								// Form Step 2
								fieldset
									.div
										.d-none.d-sm-inline.h4 Blessing Details:
										span.pull-right.h4 Step 2 - 2
										input.form-control#userID(type='hidden' name='userID' value=`${user.int_tempuserID}`)
										.container
											.row
									
									
												.col-md-6.px-lg-3.px-md-3.px-sm-0
													.form-group
														h6.label-control Owner
															.text-danger.d-inline  *
														input.form-control#owner1(type='text' placeholder="Enter Name of Owner" name='owner1' pattern="[A-Za-z ]{3,}" oninvalid="setCustomValidity('Enter Valid Name of Owner')" onchange="try{setCustomValidity('')}catch(e){}")
														.help-block.with-errors
													.form-group
														h6.label-control House/Establishment Location
															.text-danger.d-inline  *
														textarea.form-control#locations1(placeholder="Please Enter Complete Address" rows="1" name='location1' pattern="^[a-zA-Z0-9,.- ]*${10,}" oninvalid="setCustomValidity('Enter Valid Address')" onchange="try{setCustomValidity('')}catch(e){}")
														.help-block.with-errors
												.col-md-6.px-lg-3.px-md-3.px-sm-0
													.form-group
														h6.label-control Contact Number
															.text-danger.d-inline  *
														input.form-control#contactnumber1(type='text' name='contactnumber1' placeholder="XXXXXXXXXXX"  pattern="[0-9]{11}" title="Input numbers only" oninvalid="setCustomValidity('Please input numbers only.')" onchange="try{setCustomValidity('')}catch(e){}")
														.help-block.with-errors
													.form-group 
														h6.label-control Email
															.text-danger.d-inline  *
														input.form-control.mb-2#email1(type='Email' name='email1' placeholder="mark242@gmail.com" )
														.help-block.with-errors
														//- pattern="/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/" email 
											.row
												.col-md-8.px-lg-3.px-md-3.px-sm-0.mx-auto
													.form-group
															h6.label-control Birth Certificate
																.text-danger.d-inline  *
															input#file-0b.file(type='file',accept='image/*',name="image")
											//- .row
											//- 	.col-md-6.px-lg-3.px-md-3.px-sm-0
											//- 		.form-group
											//- 			h6.label-control Desired Date
											//- 			input.datepicker.form-control(type='date' name='desireddate1')
											//- 	.col-md-6.px-lg-3.px-md-3.px-sm-0
											//- 		.form-group.mt-1
											//- 			h6.label-control Desired Time
											//- 			input.timepicker.form-control(type='text' name='desiredtime1')
									.learn-more.pull-right
										button.btn.std-btn.btn-secondary.btn-previous.m-0(type='button') Prev
										button.btn.btn-submit#submitButton(type='submit' value= `${user.int_tempuserID}`) Submit
								input#errChecker(type='text' hidden)
								// Form Step 2
block addjs
	script.
		$(document).ready(function(){
			validateForm()
			$('#submitButton').click(function(){
					$(this).attr('disabled', 'disabled');
					var idNow = $(this).val();
					console.log(idNow)
					$.post('/index/establishment/query',{
						id:idNow,
					}).done(data=>{
						if($('#ourhomeradio').prop("checked")){
							owner= $('#owner').val(),
							locations= $('#locations').val(),
							contactnumber= $('#contactnumber').val(),
							email= $('#email').val(),
							blessloc= '1'

						}
						if($('#otherradio').prop("checked")){
							owner= $('#owner1').val(),
							locations= $('#locations1').val(),
							contactnumber= $('#contactnumber1').val(),
							email= $('#email1').val(),
							blessloc= '2'
						}
						
					
							var formData= new FormData();
							formData.append('desireddate1', eventDate),
							formData.append('desiredtime1', timeStart),
							formData.append('desiredtimeend', timeEnd2),
							formData.append('userID', $('#userID').val()),
							formData.append('image', $('#file-0b')[0].files[0]),
							formData.append('owner', owner),
							formData.append('locations',locations),
							formData.append('contactnumber',contactnumber),
							formData.append('email',email),
							formData.append('blessloc',blessloc),
							
							
						$.ajax({
							type: 'POST',
							url: '/index/establishment/form',
							data: formData,
							processData:false,
							contentType:false,
							success: function(data){
								swal({
									title: "Success",
									text: 'Your request has been submitted; however, the time is still tentative. We will notify you once the scheduled time is changed. Thank you and God bless',
									icon: 'success',
									buttons:{
										Okay:'okay'
									}
								}).then((value)=>{
									window.location='/index#services'
								})
							}

						})

					})
						
				})		

		$('#other').hide();

		$('#ourhomeradio').click(function() {
			$('#ourhome').slideDown();
			$('#other').slideUp();
		});
		$('#otherradio').click(function() {
			$('#ourhome').slideUp();
			$('#other').slideDown();
		});

		let startDate = moment().add(6, 'days')
		let endDate = moment().add(31, 'days')

		$('.establishment').datetimepicker({
			format: 'YYYY-MM-DD',
			minDate: startDate,
			maxDate: endDate,
			icons: {
					time: "fa fa-clock-o",
					date: "fa fa-calendar",
					up: "fa fa-chevron-up",
					down: "fa fa-chevron-down",
					previous: 'fa fa-chevron-left',
					next: 'fa fa-chevron-right',
					today: 'fa fa-screenshot',
					clear: 'fa fa-trash',
					close: 'fa fa-remove',
			},
		});

			let startEstTime = moment().hour(8)
			let endEstTime = moment().hour(17)

			$('.desiredEstTime').datetimepicker({
				format: 'LT',
				minDate: startEstTime,
				maxDate: endEstTime,
				useCurrent: "hour",
				stepping: 30,
				icons: {
					time: "fa fa-clock-o",
					date: "fa fa-calendar",
					up: "fa fa-chevron-up",
					down: "fa fa-chevron-down",
					previous: 'fa fa-chevron-left',
					next: 'fa fa-chevron-right',
					today: 'fa fa-screenshot',
					clear: 'fa fa-trash',
					close: 'fa fa-remove'
				}
			});
				var dateNow2
				var eventDate ='';
				var timeStart ='';
				var timeEnd2 ='';
				var dateNow = new Date()
				var dateNow2;
				var gender;
				$.get('/index/establishment/utilities/query').done(data=>{
					console.log(data.int_reservationmindays)
					dateNow2 = moment(dateNow,'YYYY-MM-DD hh:mm a').add(data.int_reservationmindays,'days').format('YYYY-MM-DD')
					$('#calendarEstablishment').fullCalendar({
						header: {
						left: 'title',
						center: 'agendaDay,month',
						right: 'prev,next today'
						},
						editable: false,
						firstDay: 0,
						selectable: true,
						defaultView: 'month',
						allDaySlot: false,
						selectHelper: true,
						minTime:data.time_availablestart,
						maxTime:data.time_availableend,
						validRange: {
							start: dateNow2
						},
						businessHours: { dow: [0,1,2,3,4,5,6] },
						selectConstraint:"businessHours",
						select:function(date,jsEvent,view){
						var view = $('#calendarEstablishment').fullCalendar('getView');
						console.log(view.name)
						if(view.name == 'agendaDay'){
							eventDate = date.format('YYYY-MM-DD')
							timeStart = date.format('hh:mm a')
							timeEnd1 = date.add(1,'hour').format('YYYY-MM-DD hh:mm a')
							timeEnd2 = moment(timeEnd1).format('hh:mm a')
							console.log(eventDate)
							console.log(timeStart)
							console.log(timeEnd2)
							swal({
								title: 'You have selected this date, are you sure?',
								html: `Date: ${eventDate}  <br>` +
								`Time Start: ${timeStart} <br>` +
								`Time End: ${timeEnd2} <br>`,
								showCancelButton: true,
								confirmButtonColor: '#3085d6',
								cancelButtonColor: '#d33',
								confirmButtonClass: 'btn btn-success',
								cancelButtonClass: 'btn btn-danger',
								buttonsStyling: true,   
							}).then((value) => {
								if(value.value) {
									$("#calendarEstablishment").fullCalendar('removeEvents',[1])
									swal(
										'Sucess!',
										'Event Date has been set.',
										'success'
									).then((value)=>{
									console.log('DESIRED TIME')
									$('#calendarEstablishment').fullCalendar('renderEvent', {
										title: 'DESIRED TIME',
										start: `${moment(eventDate,'YYYY-MM-DD').format('MM/DD/YYYY')} ${timeStart}`,
										end: `${moment(eventDate,'YYYY-MM-DD').format('MM/DD/YYYY')} ${timeEnd2}`,
										allDay: false,
										id:1,
										overlap: false,
										droppable:true
									});
									return value
									console.log(eventDate)
									})
								} else if (
									value.dismiss === swal.DismissReason.cancel
								) {
									eventDate = '';
									timeStart = '';
									timeEnd2 = '';
								}
							})
						}
						else if(view.name == 'month'){
							$('#calendarEstablishment').fullCalendar('changeView', 'agendaDay')
							$('#calendarEstablishment').fullCalendar('gotoDate', date);
						}
						else{
							return  
						}
						}
					})
				})
			});

		function validateForm(){
			$('form').formValidation({
				framework: 'bootstrap',
				icon: {
					valid: 'fa fa-check',
					invalid: 'fa fa-times',
					validating: 'fa fa-spinner'
				},
				fields: {
					lastname: {
						validators: {
								notEmpty: {
										message: `Please Enter Your Last Name`
								},
								regexp: {
									regexp: /^([a-zs ]{2,})+$/i,
									message: 'Only Aphabetical Characters, Minimum of 2.'
								},
						}
					},
					firstname: {
						validators: {
								notEmpty: {
										message: `Please Enter Your Last Name`
								},
								regexp: {
									regexp: /^([a-zs ]{2,})+$/i,
									message: 'Only Aphabetical Characters, Minimum of 2.'
								},
						}
					},
					middlename: {
						validators: {
							regexp: {
								regexp: /^([a-zs ]{2,})+$/i,
								message: 'Only Aphabetical Characters, Minimum of 2.'
							},
						}
					},
					relation: {
						validators: {
						notEmpty: {
										message: `Please Enter Your Relationship with the Ill`
								},
							}
						},
					//- birthday: {
					//- 	validators: {
					//- 	notEmpty: {
					//- 					message: `Please Enter Your Birthday`
					//- 			},
					//- 		}
					//- 	},
					birthplace: {
							validators: {
									notEmpty: {
									message: `Please Enter Your Birthplace`
									},
									regexp: {
										regexp: /^([a-zs ]{2,})+$/i,
										message: 'Only Aphabetical Characters, Minimum of 2.'
									},
								}
							},
					address: {
							validators: {
									notEmpty: {
									message: `Please Enter Your Address`
									},
									regexp: {
										regexp: /^([a-zs0-9-,. ]{8,})+$/i,
										message: 'Please Enter A Valid Address'
									},
								}
							},
					details: {
							validators: {
									notEmpty: {
									message: `Please Enter Cause of Death`
									},
									regexp: {
										regexp: /^([a-zs ]{6,})+$/i,
										message: 'Only Aphabetical Characters, Minimum of 6.'
									},
								}
							},
					image: {
							validators: {
								notEmpty: {
									message: `Please Enter Details`
									},
								}
							},
					//- venue: {
					//- 		validators: {
					//- 				regexp: {
					//- 					regexp: /^([a-zs ]{6,})+$/i,
					//- 					message: 'Only Aphabetical Characters, Minimum of 6.'
					//- 				},
					//- 			}
					//- 		},
					},
				})
			.on('err.field.fv', function(e, data) {
				// Get the first invalid field
				var invalidFields = data.fv.getInvalidFields().length;
				$('#errChecker').val(invalidFields)
			})
			.on('success.field.fv', function(e, data) {
				// Get the first invalid field
				var invalidFields = data.fv.getInvalidFields().length;
				$('#errChecker').val(invalidFields)
			});
		}