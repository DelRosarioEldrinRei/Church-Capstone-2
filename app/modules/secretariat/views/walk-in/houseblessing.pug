extends ../../../../templates/secretariat
block prepend main
	style.
			.fa {
				font-size: 25px !important;
			}
			.fa-check::before {
				color: #28a745 !important;
			}
			.fa-times::before {
				color: red !important;
			}
			small {
				font-size: 90% !important;
			}
	main.bgc-grey-100
		#mainContent
			.row.masonry.pos-r
				.masonry-sizer.col-md-12
				.masonry-item.col-md-12
					.bgc-white.p-20.bd
						h6.c-grey-900 Establishment/House Blessing
						.mT-30
							form
								h5.label-control Contact Details
								.row
									.col-md-6
										.row
											.col-md-12
												.form-group
													label Last Name
														.text-danger.d-inline *
													input.form-control#templastname(type='text' placeholder="Ex. Dela Cruz" name='lastname' required)
											.col-md-12
												.form-group
													label First Name
														.text-danger.d-inline *
													input.form-control#tempfirstname(type='text' placeholder="Ex. Juan" name='firstname' required)
											.col-md-12
												.form-group
													label Address
														.text-danger.d-inline *
													input.form-control#tempaddress(type='text' placeholder="Ex. Dela Cruz" name='lastname' required)
											.col-md-12
												.form-group
													label Contact Number
														.text-danger.d-inline *
													input.form-control#tempcontactnumber(type='text' placeholder="Ex. Dela Cruz" name='lastname' required)
											.col-md-12
												.form-group
													label Email Address
														.text-danger.d-inline *
													input.form-control#tempemailaddress(type='text' placeholder="Ex. Juan" name='firstname' required)
									.col-md-6
										.form-group
											label Schedule Date and Time
												.text-danger.d-inline  *
											#calendarEstablishment
								hr
								h5.label-control Request Details
								.row
									.col-md-6
								.row
									.col-md-8
										.form-group
											label Owner
												.text-danger.d-inline  *
											input.form-control(id='owner' name='owner' type='text' placeholder='Owner\'s Name')
									.col-md-4
										.form-group
											label Contact Number
											.text-danger.d-inline  *
											input.form-control(id='contactnumber' name='contactnumber' type='text' placeholder='Contact Number')
								.row
									.col-md-8
										.form-group
											label Establishment Location
												.text-danger.d-inline  *
											input.form-control(id='estloc' name='estloc' type='text' placeholder='Location')
									.col-md-4
										.form-group
											label Email Address
											.text-danger.d-inline  *
											input.form-control(id='emailaddress' name='emailaddress' type='text' placeholder='Email Address')
								.row
									.col-md-6
										.form-group
											label File Details
												.text-danger.d-inline  *
											.form-check
												label.form-check-label
													input.form-check-input(id='nofile' name='file' type='radio' value='Male' checked='') 
													| No file submitted
											.form-check
												label.form-check-label
													input.form-check-input(id='withfile' name='file' type='radio' value='Male') 
													| File(s) submitted
									.col-md-6#withfiledrpdwn
										
										label File Location
										.row
											.col-md-6
												#cabinetdiv.form-group
												label
													| Cabinet
													select#cabinets.form-control(onchange='setcabinet(value);')
													
											.col-md-6
												.form-group
												label
													| Division
													select#divisions.form-control
								.text-center
									button.btn.btn-primary#submitApplication(type='button') Submit
							input#errChecker(type='text' hidden)
block addjs
	script.
		// Place where the blessing will happen logic
		$('#hospitalname').hide();
		$('#othervenue').hide();

		$('#place1').click(function() {
			$('#hospitalname').slideUp();
			$('#othervenue').slideUp();
		});
		$('#place2').click(function() {
			$('#hospitalname').slideDown();
			$('#othervenue').slideUp();
		});
		$('#place3').click(function() {
			$('#hospitalname').slideUp();
			$('#othervenue').slideDown();
		});

		$('#desiredtime').datetimepicker({
				format: 'LT',
				icons: {
					time: "fa fa-clock-o",
					date: "fa fa-calendar",
					up: "fa fa-chevron-up",
					down: "fa fa-chevron-down",
					previous: 'fa fa-chevron-left',
					next: 'fa fa-chevron-right',
					today: 'fa fa-screenshot',
					clear: 'fa fa-trash',
					close: 'fa fa-remove'
				}
		});
		//Realtime Validation
		function validateForm(){
			$('form').formValidation({
				framework: 'bootstrap',
				icon: {
					valid: 'fa fa-check',
					invalid: 'fa fa-times',
					validating: 'fa fa-spinner'
				},
				fields: {
					desireddate: {
						validators: {
								notEmpty: {
										message: `Please schedule date`
								}
						}
					},
					desiretime: {
						validators: {
								notEmpty: {
										message: `Please scheduled time`
								}
						}
					},
					owner: {
						validators: {
								notEmpty: {
										message: `Please enter owner's full name`
								}
						}
					},
					contactnumber: {
						validators: {
								notEmpty: {
										message: `Please enter contact number`
								}
						}
					},
					
					emailaddress: {
						validators: {
								notEmpty: {
										message: `Please email address`
								}
						}
					},
					
					
				},
			})
			.on('err.field.fv', function(e, data) {
				// Get the first invalid field
				var invalidFields = data.fv.getInvalidFields().length;
				$('#errChecker').val(invalidFields)
			})
			.on('success.field.fv', function(e, data) {
				// Get the first invalid field
				var invalidFields = data.fv.getInvalidFields().length;
				$('#errChecker').val(invalidFields)
			});
		}
		$('#withfiledrpdwn').hide();
		$('#nofile').click(function() {
			$('#withfiledrpdwn').slideUp();
			$('#cabinets').empty();
			$('#divisions').empty();
			$('#folderID').empty();
		});
		
		$(document).on('click','#withfile',function(){
			$('#withfiledrpdwn').slideDown();
			$.post('/secretariat/getcabinets').done(data =>{
				$('#cabinets').append(`
						<option>No division selected</option>
					`)
				$('#divisions').append(`
						<option>No division selected</option>
					`)
				for(i=0;i<data.cabinets.length;i++){
					$('#cabinets').append(`
						<option value=${data.cabinets[i].int_cabinetID}>${data.cabinets[i].var_cabinetname}</option>
					`)
				}
			})
		});

		function setcabinet($i){
				console.log($i)
				$("#divisions").empty();
				$('#divisions').append(`
						<option>No division selected</option>
					`)
				$.post('/secretariat/transaction-marriage/getdivisions',{ cabinetID:$i}).done(data=>{
					console.log(data)
					for(i=0;i<data.divisions.length;i++){
					$('#divisions').append(`
						<option value='${$i}-${data.divisions[i].int_divisionID}'>${data.divisions[i].var_divisionname}</option>
					`)
					}//for		
				})//donedatacabinets
			}//function cabinets
		function setdivision($i){
				console.log($i)
				$("#folders").empty();

				$.post('/secretariat/transaction-marriage/getfolders',{ location:$i}).done(data=>{
					console.log(data)
					var newID= data.folders.max +1
					$('#folderID').val(`${newID}`)

					//- $('#folders').append(`
					//- 	<option value=${data.folders.max}>${data.folders.max}</option>
					//- `)
						
				})//donedatacabinets
			}//function cabinets

		$(document).ready(function() {
			validateForm()
			
			$('#submitApplication').click(function(){
				console.log('SUBMIT BUTTON CLICKED')
				swal({
				title:'Are you sure?', 
				text:'This record will be considered as an approved request, and will then be added to the schedule of the priest. We will wait for the confirmation of the priest.',
				type:'warning',
				showCancelButton: false,
				confirmButtonColor: '#3085d6',
				cancelButtonColor: '#d33',
				confirmButtonText: 'Confirm'
				}).then((result)=>{
					if(result.value){
						if($('#withfile').prop("checked")){
							var boolfile=1
						}
						if($('#nofile').prop("checked")){
							var boolfile=0
						}
						$.post('/secretariat/walkin-houseblessing', {
							desireddate:$('#desireddate').val(),
							desiredtime:$('#desiredtime').val(),
							owner: $('#owner').val(),
							estloc: $('#estloc').val(),
							emailaddress: $('#emailaddress').val(),
							contactnumber: $('#contactnumber').val(),
							cabinet: $('#cabinets').val(),
							division: $('#divisions').val(),
							boolfile: boolfile,
							templastname:$('#templastname').val(),
							tempfirstname:$('#tempfirstname').val(),
							tempaddress:$('#tempaddress').val(),
							tempemailaddress:$('#tempemailaddress').val(),
							tempcontactnumber:$('#tempcontactnumber').val(),
							
						}).done(data =>{
							swal({
							title:'Success',
							text:'Request added', 
							type:'success'
							}).then(function(){
								location.reload();
							})
							$('#updateModal').modal('hide');
							$('#updateAppend').empty();
							
						})//done
					}
				})
			})


		var dateNow2
				var eventDate ='';
				var timeStart ='';
				var timeEnd2 ='';
				var dateNow = new Date()
				var dateNow2;
				var gender;
				$.get('/secretariat/walkin-establishment/utilities/query').done(data=>{
					console.log(data.int_reservationmindays)
					dateNow2 = moment(dateNow,'YYYY-MM-DD hh:mm a').add(data.int_reservationmindays,'days').format('YYYY-MM-DD')
					$('#calendarEstablishment').fullCalendar({
						header: {
						left: 'title',
						center: 'agendaDay,month',
						right: 'prev,next today'
						},
						editable: false,
						firstDay: 0,
						selectable: true,
						defaultView: 'month',
						allDaySlot: false,
						selectHelper: true,
						minTime:data.time_availablestart,
						maxTime:data.time_availableend,
						validRange: {
							start: dateNow2
						},
						businessHours: { dow: [0,1,2,3,4,5,6] },
						selectConstraint:"businessHours",
						select:function(date,jsEvent,view){
						var view = $('#calendarEstablishment').fullCalendar('getView');
						console.log(view.name)
						if(view.name == 'agendaDay'){
							eventDate = date.format('YYYY-MM-DD')
							timeStart = date.format('hh:mm a')
							timeEnd1 = date.add(1,'hour').format('YYYY-MM-DD hh:mm a')
							timeEnd2 = moment(timeEnd1).format('hh:mm a')
							console.log(eventDate)
							console.log(timeStart)
							console.log(timeEnd2)
							swal({
								title: 'You have selected this date, are you sure?',
								html: `Date: ${eventDate}  <br>` +
								`Time Start: ${timeStart} <br>` +
								`Time End: ${timeEnd2} <br>`,
								showCancelButton: true,
								confirmButtonColor: '#3085d6',
								cancelButtonColor: '#d33',
								confirmButtonClass: 'btn btn-success',
								cancelButtonClass: 'btn btn-danger',
								buttonsStyling: true,   
							}).then((value) => {
								if(value.value) {
									$("#calendarEstablishment").fullCalendar('removeEvents',[1])
									swal(
										'Sucess!',
										'Event Date has been set.',
										'success'
									).then((value)=>{
									console.log('DESIRED TIME')
									$('#calendarEstablishment').fullCalendar('renderEvent', {
										title: 'DESIRED TIME',
										start: `${moment(eventDate,'YYYY-MM-DD').format('MM/DD/YYYY')} ${timeStart}`,
										end: `${moment(eventDate,'YYYY-MM-DD').format('MM/DD/YYYY')} ${timeEnd2}`,
										allDay: false,
										id:1,
										overlap: false,
										droppable:true
									});
									return value
									console.log(eventDate)
									})
								} else if (
									value.dismiss === swal.DismissReason.cancel
								) {
									eventDate = '';
									timeStart = '';
									timeEnd2 = '';
								}
							})
						}
						else if(view.name == 'month'){
							$('#calendarEstablishment').fullCalendar('changeView', 'agendaDay')
							$('#calendarEstablishment').fullCalendar('gotoDate', date);
						}
						else{
							return  
						}
						}
					})
				})

		});//documentready