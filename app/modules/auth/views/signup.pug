doctype html
html
	head
		meta(charset='utf-8')
		meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
		title Sign Up
		link(href='/css/loader.css', rel='stylesheet')
		link(href='/css/formValidation.css', rel='stylesheet')
		link(href='/admin/style.css', rel='stylesheet')
		link(rel='icon', href='/imgchurch/favicon.ico', type='image/x-icon')
		style.
			.shadow {
				box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); }

			.shadow2 {
				box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
			}
				
			.shadow3 {
				box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
			}
			.fa {
				font-size: 20px !important;
			}
			.fa-check::before {
				color: #28a745 !important;
			}
			.fa-times::before {
				color: red !important;
			}
			small {
				font-size: 90% !important;
			}
	body.app
		#loader
			.spinner
		#wrapper
			.peers.ai-s.fxw-nw.h-100vh
				.peer.peer-greed.h-100.pos-r.bgr-n.bgpX-c.bgpY-c.bgsz-cv(class='d-n@sm-', style='background-image: url("/imgchurch/bg5.jpg")')
					.pos-a.centerXY
						//- .bgc-white.bdrs-50p.pos-r(style='width: 105px; height: 105px; margin-left:30px;')
						//- 	img.rounded-circle.border.border-dark.pos-a.centerXY(src='/Helium/img/churchiconblack.png', alt=''  style="width: 5rem")
				.col-12.col-md-5.peer.pX-40.pY-40.h-100.bgc-white.scrollable.pos-r(style='min-width: 320px;')
					h3.c-grey-900.mB-10 
						img.rounded-circle.shadow2(src='/Helium/img/INLPP.png', alt=''  style="width: 3.5rem")
						|  Register
					form.form(method='POST', action='/signup' novalidate)
						.form-group
							.form-row
								.form-group.col-md-4.m-0
									.form-group
										label.h6 Last Name
											.text-danger.d-inline *
										input.form-control(type='text' placeholder="Ex. Dela Cruz" name='lastname' required)
										.invalid-feedback Please re-enter your password valid Last Name.

								.form-group.col-md-4.m-0
									.form-group
										.invalid-feedback Please re-enter your password valid Last Name.
										label.h6 First Name
											.text-danger.d-inline *
										input.form-control(type='text' placeholder="Ex. Juan" name='firstname' required)
										.invalid-feedback Please provide a valid First Name.
								.form-group.col-md-4.m-0
									.form-group
										label.h6 Middle Name
										input.form-control(type='text' placeholder="Ex. Santos" name='middlename')
							.form-row
								.form-group.col-md-6
									label.h6 Gender
										.text-danger.d-inline *
									select#inputState.form-control(name="gender" required) 
										option(selected='' value="" disabled) Choose...
										option(value="Male") Male
										option(value="Female") Female						
								.form-group.col-md-6
									label.h6 Contact Number
									input.form-control(type='text' placeholder="Ex. 09324252352 or +639234256781" name='contactnumber')
							//- .form-check
							//- 	label.form-check-label
							//- 		input#gridRadios1.form-check-input(type='radio', name='gridRadios', value='option1', checked='')
							//- 		| ption one is this and thatâ€”be sure to include why it's great
							//- .form-check
							//- 	label.form-check-label
							//- 		input#gridRadios2.form-check-input(type='radio', name='gridRadios', value='option2')
							//- 		| ption two can be something else and selecting it will deselect option one

									.invalid-feedback Please choose a gender.
								.form-group.col-md-6
									label.h6 Contact Number:
										.text-danger.d-inline *
									input.form-control(type='text' name='contactnumber' placeholder="Ex. 091234567890	")
							.form-group
								label.h6(for='exampleFormControlTextarea1') Address:
									.text-danger.d-inline *
								textarea#exampleFormControlTextarea1.form-control(rows='1' name='address' placeholder="Ex. 56 Sampaguita Street Sta. Maria")
							.form-row
								.form-group.col-md-6
									label.h6 Username:
										.text-danger.d-inline *
									input.form-control#usernameID(type='text' name='username' placeholder="Ex. Mark234" required)
									.invalid-feedback Please provide a username.
								.form-group.col-md-6
									label.h6 Email Address:
										.text-danger.d-inline *
									input.form-control(id='email' type='email' name='email' placeholder="Ex. markfrancisco@gmail.com" required)
									.invalid-feedback Please provide a valid email address.
							.form-group
								label.h6 Password:
									.text-danger.d-inline *
								input.form-control(type='password' name='password' placeholder="Enter Password" required)
								.invalid-feedback Please provide password.
							.form-group
								label.h6 Confirm Password:
									.text-danger.d-inline *
								input.form-control(type='password' name='confirmpassword' placeholder="Re-enter Password" required)
								.invalid-feedback Please re-enter your password.
							.form-check
								label.form-check-label
								input.form-check-input(type='checkbox', value='', required)
								span.form-check-sign
									span.check
									| I agree to the 
									a(href='#something') terms and conditions
									| .
									.text-danger.d-inline
									//-  *	mysql-init.txt.

								.invalid-feedback You must agree to our terms and conditions
								.text-center
									button.btn.btn-primary.mt-3(id='hello' type='submit') Submit
							.form-group
								.peers.ai-c.jc-sb.fxw-nw
									.peer
										a.peer.peer-greed(href="/login") Have an account? Log-in
					input#errChecker(type='text' hidden)
	script(type='text/javascript', src='/js/jquery.min.js')
	script(type='text/javascript', src='/js/formValidation.js')
	script(type='text/javascript', src='/js/bootstrapformvalidation.js')
	script(type='text/javascript', src='/admin/vendor.js')
	script(type='text/javascript', src='/admin/bundle.js')
	script(type='text/javascript', src='/js/loader.js')
	script.
		function validateForm(){
				$('form').formValidation({
					framework: 'bootstrap',
					icon: {
						valid: 'fa fa-check',
						invalid: 'fa fa-times',
						validating: 'fa fa-spinner'
					},
					fields: {
						username: {
							validators: {
								notEmpty: {
									message: 'Please Enter Your Username',
								},
								regexp: {
										regexp: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{6,}$/,
										message: 'Minimum six characters, at least one uppercase letter, one lowercase letter, one number and one special character. Valid Special Characters [@$!%*?&]'
								},
							remote: {
								url: `/signup/username/query`,
								message: 'Username has been taken',
								validKey: 'ID',
								type: 'POST',
								data: function(){
									var idtype = $('#usernameID').val()
									//- var err = $('#errChecker').val()
									return {
										idType: idtype
									}
								}
							}
							}
						},
						lastname: {
							validators: {
									notEmpty: {
											message: `Please Enter Your Last Name`
									},
									regexp: {
										regexp: /^([a-zs ]{2,})+$/i,
										message: 'Only Aphabetical Characters, Minimum of 2.'
									},
							}
						},
						firstname: {
							validators: {
									notEmpty: {
											message: `Please Enter Your First Name`
									},
									regexp: {
										regexp: /^([a-zs ]{2,})+$/i,
										message: 'Only Aphabetical Characters, Minimum of 2.'
									},
							}
						},
						middlename: {
							validators: {
									regexp: {
										regexp: /^([a-zs ]{2,})+$/i,
										message: 'Only Aphabetical Characters, Minimum of 2.'
									},
							}
						},
						gender: {
							validators: {
									notEmpty: {
											message: `Please Enter Your Gender`
									}
							}
						},
						contactnumber: {
							validators: {
								regexp: {
									regexp: /^(09|\+639)\d{9}$/,
									message: 'Invalid Contact Number Format.'
								},
							}
						},
						address: {
							validators: {
									notEmpty: {
											message: `Please Enter Your Address`
									},
									regexp: {
										regexp: /^([a-zs0-9-,. ]{8,})+$/i,
										message: 'Please Enter A Valid Address'
									},
							}
						},
						email: {
							validators: {
									notEmpty: {
											message: `Please Enter Your Email`
									},
									remote: {
										url: `/signup/email/query`,
											message: 'Email has been taken',
											validKey: 'ID',
											type: 'POST',
											data: function(){
												var idtype = $('#email').val()
												return {
													idType: idtype
												}
											}
										}
							}
						},
						password: {
							validators: {
									notEmpty: {
											message: `Please Enter Your Password`
									},
									identical: {
										field: 'confirmpassword',
										message: 'The password and its confirm are not the same.'
									},
									regexp: {
										regexp: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,
										message: 'Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character.'
									},
							}
						},
						confirmpassword: {
							validators: {
									notEmpty: {
											message: `Please Re-enter Your Password`
									}
							}
						},
					},
				})
				.on('err.field.fv', function(e, data) {
					// Get the first invalid field
					var invalidFields = data.fv.getInvalidFields().length;
					$('#errChecker').val(invalidFields)
				})
				.on('success.field.fv', function(e, data) {
					// Get the first invalid field
					var invalidFields = data.fv.getInvalidFields().length;
					$('#errChecker').val(invalidFields)
				});
			}
			$( document ).ready(function() {
				console.log( "ready!" );
				validateForm()

				$('#hello').click(function() {
					$('#needs-validation').submit();
				});
			});
		//- (function() {
		//- 	'use strict';

		//- 	window.addEventListener('load', function() {
		//- 		var form = document.getElementById('needs-validation');
		//- 		form.addEventListener('submit', function(event) {
		//- 			if (form.checkValidity() === false) {
		//- 				event.preventDefault();
		//- 				event.stopPropagation();
		//- 			}
		//- 			form.classList.add('was-validated');
		//- 		}, false);
		//- 	}, false);
		//- })();
